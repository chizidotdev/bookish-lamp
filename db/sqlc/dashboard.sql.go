// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: dashboard.sql

package db

import (
	"context"
)

const updateDashboardItemsToShip = `-- name: UpdateDashboardItemsToShip :exec

UPDATE dashboard
SET recent_sales = (
  SELECT COUNT(*) FROM sales
  WHERE sales.user_id = dashboard.user_id
  AND sales.date >= now() - interval '7 days' -- Adjust the timeframe as needed
)
`

// UPDATE dashboard
// SET items_to_ship = (
//
//	SELECT COUNT(*) FROM items
//	WHERE items.user_id = dashboard.user_id
//	AND items.status = 'ready_to_ship'
//
// );
func (q *Queries) UpdateDashboardItemsToShip(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardItemsToShip)
	return err
}

const updateDashboardLowStockItems = `-- name: UpdateDashboardLowStockItems :exec
UPDATE dashboard
SET low_stock_items = (
    SELECT COUNT(*) FROM items 
    WHERE items.user_id = dashboard.user_id
    AND items.stock <= 5
)
`

func (q *Queries) UpdateDashboardLowStockItems(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardLowStockItems)
	return err
}

const updateDashboardNotifications = `-- name: UpdateDashboardNotifications :exec

UPDATE dashboard
SET inventory_value = (
  SELECT SUM(items.price * items.quantity) FROM items
  WHERE items.user_id = dashboard.user_id
)
`

// UPDATE dashboard
// SET notifications = (
//
//	SELECT COUNT(*) FROM notifications
//	WHERE notifications.user_id = dashboard.user_id
//
// );
func (q *Queries) UpdateDashboardNotifications(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardNotifications)
	return err
}

const updateDashboardPendingOrders = `-- name: UpdateDashboardPendingOrders :exec
UPDATE dashboard
SET pending_orders = (
  SELECT COUNT(*) FROM orders
  WHERE orders.user_id = dashboard.user_id
    AND orders.status = 'Pending'
)
`

func (q *Queries) UpdateDashboardPendingOrders(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardPendingOrders)
	return err
}

const updateDashboardSalesPerformance = `-- name: UpdateDashboardSalesPerformance :exec
UPDATE dashboard
SET sales_performance = (
  SELECT SUM(sales.amount) FROM sales
  WHERE sales.user_id = dashboard.user_id
)
`

func (q *Queries) UpdateDashboardSalesPerformance(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardSalesPerformance)
	return err
}

const updateDashboardTotalItems = `-- name: UpdateDashboardTotalItems :exec
UPDATE dashboard
SET total_items = (
    SELECT COUNT(*) FROM items 
    WHERE items.user_id = dashboard.user_id
)
`

func (q *Queries) UpdateDashboardTotalItems(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, updateDashboardTotalItems)
	return err
}
